#Spring Boot server configuration
server.address=0.0.0.0
server.port=8080
server.error.whitelabel.enabled=false

#TEST
#spring.datasource.url=jdbc:sqlserver://xxx.xxx.xxx.xxx:2020;databaseName=xxxxx-xxx
#spring.datasource.username=
#spring.datasource.password=

#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.SQLServer2012Dialect
#spring.jpa.hibernate.ddl-auto=update

#512-bit encryption key used as a token 
hqApi.http.auth.tokenName=Authorization
hqApi.http.auth.tokenValue=Bearer test

#NB uncomment these lines when pushing to live or SSL will not be enabled thus HTTP traffic only
#Enable SSL
#security.require-ssl=true
#server.ssl.key-alias=
#server.ssl.key-store=.pfx
#server.ssl.key-store-password=
#server.ssl.key-store-type=PKCS12

#Allow export of available endpoints
management.endpoints.web.exposure.include=*
debug=true
server.tomcat.accesslog.enabled=true

#Kafka Setup
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=my-group
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

